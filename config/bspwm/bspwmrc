#!/usr/bin/env sh

##############
## variable ##
##############
# paths
default_wallpaper="$HOME/resource/wallpapers/default/default"
bar_launch_script="$HOME/env/config/polybar/launch"

# styling
border_width='2'
border_radius='6'
window_gap='12'
split_ratio='0.56'
borderless_monocle='true'
gapless_monocle='true'
focus_follows_pointer='false'

# colors
focused_border_color='#D57755'
normal_border_color='#855666'

## deps
ext_files="$default_wallpaper $bar_launch_script"
ext_commands="bpsc xrandr feh xrdb"

##############
## function ##
##############
# $1 = type: command, variable, path
# $2 = name dep to test
exit_if_missing () {
  if [ "$1" = 'command' ]; then 
    [ "$(command -v "$2")" ] || ( printf %s\\n "$2 not found " && exit 1 ) 
  elif [ "$1" = 'variable' ]; then
    [ -n "$2" ] || ( printf %s\\n "$2 not found " && exit 1 ) 
  elif [ "$1" = 'path' ]; then
    [ -e "$2" ] || ( printf %s\\n "$2 not found " && exit 1 ) 
  fi
}

check_dependencies () { 
  [ -n "$ext_files" ] && echo "$ext_files" \
  | xargs printf %s\\n | while read -r i; do
    exit_if_missing 'path' "$i"
  done
  [ -n "$ext_commands" ] && echo "$ext_commands" \
  | xargs printf %s\\n | while read -r i; do
    exit_if_missing 'command' "$i"
  done
  [ -n "$ext_variables" ] && echo "$ext_variables" \
  | xargs printf %s\\n | while read -r i; do
    exit_if_missing 'variable' "$i"
  done
}

# set rules for home hostname
set_home () {
  # set display config
  xrandr --output DP-2 --primary --mode 1920x1080 --rotate normal --rate 144.0 \
	  --output HDMI-0 --left-of DP-2 --mode 1366x768 --rotate left --rate 60.0
  
  # add desktops
  bspc monitor 'HDMI-0' -a 'lg_a' 
  bspc monitor 'DP-2' -a 'A' 'B' 'C' 
}

# set rules for katana hostname
set_katana () {
  bspc monitor 'LVDS-1' -a 'A' 'B' 'C' 
}

# set settigs that apply to all
set_common () {

  # set bg 
  feh --bg-scale --no-fehbg "$default_wallpaper"

  # remove desktops
  bspc desktop 'Desktop' -r
  bspc desktop 'Desktop' -r

  # add config settings
  bspc config  'border_width' "$border_width" 
  bspc config  'border_radius' "$border_radius" # need special build for radius to work  
  bspc config  'window_gap' "$window_gap"  
  bspc config  'split_ratio' "$split_ratio" 
  bspc config  'borderless_monocle' "$borderless_monocle"  
  bspc config  'gapless_monocle' "$gapless_monocle"  
  bspc config  'focus_follows_pointer' "$focus_follows_pointer"  

  ## set border colors
  bspc config 'focused_border_color' "$focused_border_color"
  bspc config 'normal_border_color' "$normal_border_color"

  # add window rules
  bspc rule -a 'Screenkey' 'manage=off'

  bspc rule -a 'Firefox:Navigator' 'desktop=a' 'state=tiled' 'follow=on' 'border=off' 'focus=on'
  bspc rule -a 'Alacritty' 'state=tiled' 'follow=on' 'border=on' 'focus=on'
  bspc rule -a 'IntelliJ IDEA' 'state=tiled' 'follow=on' 'border=off' 'focus=on'
  bspc rule -a 'mpv' 'state=tiled' 'follow=on' 'border=on' 'focus=on'
  bspc rule -a 'polybar-mybar3_DP-2' 'focus=on' 'border=on' 'floating=on'
  bspc rule -a 'Firefox:*' 'focus=on' 'border=on' 'floating=on'
  bspc rule -a 'feh' 'focus=off' 'border=off' 'floating=on' 'layer=below' 'state=floating'
  bspc rule -a 'Pqiv' 'focus=off' 'border=off' 'floating=on' 'layer=below' 'state=floating'
}

# start applications when all settings are in place
exit_init () {
  $bar_launch_script & # launch bar 
}

###########
## start ##
###########

check_dependencies

( [ "$(hostname)" = 'home' ]    && set_home 
  [ "$(hostname)" = 'katana' ]  && set_katana ) 

set_common
exit_init
